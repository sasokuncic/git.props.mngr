# Name:  AutoAttendant_en_US.properties
# @version 1.00, 11.09.2012

m.Applications.AutoAttendant=Auto Attendant

# Scenario
m.Scenario.class=Scenario
m.Scenario.nodeId=Node
m.Scenario.attScenId=Scenario ID
m.Scenario.attScenName=Name
m.Scenario.scenEnbl=Disable
m.Scenario.welcomeId=Welcome audio file
m.Scenario.welcomeIdR=Welcome audio file
m.Scenario.noInputAudioId=No input audio file
m.Scenario.noInputAudioIdR=No input audio file
m.Scenario.noMatchAudioId=No match audio file
m.Scenario.noMatchAudioIdR=No match audio file
m.Scenario.dialogue=Dialogues
m.Scenario.maxDialogues=20
m.Scenario.insertDialogue=Insert Dialogue
m.Scenario.deleteScenario=Delete Scenario
m.Scenario.usedScenario=Scenario is used in '{0}'.

m.Scenario.err.attScenName="Scenario Name" '{0}' already exist.
m.Scenario.err.maxDialogues=Max {0} 'Dialogues' can be defined for 'Scenario'.
m.Scenario.err.oneDialogue=One 'Dialogue' must be defined for 'Scenario'
m.Scenario.err.deleteScenario=Error occurred while '{0}'
m.Scenario.err.noMultiDialogues=Multiple update is not allowed.\nPlease select only one dialog.

# Schedule
m.Schedule.class=Schedule
m.Schedule.nodeId=Node
m.Schedule.attSchId=Schedule ID
m.Schedule.attSchName=Name
m.Schedule.schBeginTime=Begin time
m.Schedule.schBeginTimeDate=Begin Date
m.Schedule.schBeginTimeTime=Begin Time
m.Schedule.schBeginTimeDateT=Begin Date
m.Schedule.schBeginTimeTimeT=Begin Time
m.Schedule.schEndTime=End time
m.Schedule.schEndTimeDate=End Date
m.Schedule.schEndTimeTime=End Time
m.Schedule.schEndTimeDateT=End Date
m.Schedule.schEndTimeTimeT=End Time

m.Schedule.weekDayMask=Week days
m.Schedule.weekDayMaskV=Week days
m.Schedule.weekDay=Week days
#m.Schedule.monday=Monday
#m.Schedule.tuesday=Tuesday
#m.Schedule.wednesday=Wednesday
#m.Schedule.thursday=Thursday
#m.Schedule.friday=Friday
#m.Schedule.saturday=Saturday
#m.Schedule.sunday=Sunday
m.Schedule.monday=Mon
m.Schedule.tuesday=Tue
m.Schedule.wednesday=Wed
m.Schedule.thursday=Thu
m.Schedule.friday=Fri
m.Schedule.saturday=Sat
m.Schedule.sunday=Sun

m.Schedule.err.attSchName="Schedule Name" '{0}' already exist.
m.Schedule.err.Time=Begin date and time must be before end date and time.

# Dialogue
m.Dialogue.class=Dialogue
m.Dialogue.nodeId=Node
m.Dialogue.attDialogId=Dialogue ID
m.Dialogue.attDialogName=Name
m.Dialogue.dialogEnbl=Disable
m.Dialogue.attScenId=Scenario
m.Dialogue.attScenIdR=Scenario
m.Dialogue.attSchId=Schedule
m.Dialogue.attSchIdR=Schedule
m.Dialogue.welcomeId=Welcome audio file
m.Dialogue.welcomeIdR=Welcome audio file
m.Dialogue.helpId=Help audio file
m.Dialogue.helpIdR=Help audio file
m.Dialogue.dialogNumber=Dialog number
m.Dialogue.dialogNumber_dscr=Enumerates dialogues that belong to the same scenario.
m.Dialogue.option=Options
m.Dialogue.maxOption=10
m.Dialogue.deleteDialogue=Delete Dialogue

m.Dialogue.err.attDialogName="Dialog Name" '{0}' already exist.
m.Dialogue.err.dialogNumber="Dialog Number" '{0}' already exist.
m.Dialogue.err.maxOption=Max {0} 'Option' can be defined for 'Dialogue'.
m.Dialogue.err.deleteDialogue=Error occurred while '{0}'

# ScenariosToPhone
m.ScenariosToPhone.class=Scenarios to phone
m.ScenariosToPhone.nodeId=Node
m.ScenariosToPhone.phoneId=Phone
m.ScenariosToPhone.phoneIdR=Phone
m.ScenariosToPhone.phoneIdRV=Phone
m.ScenariosToPhone.attScenId=Scenario
m.ScenariosToPhone.attScenIdR=Scenario

m.ScenariosToPhone.err.phoneId="Phone" '{0}' already exist.

# Option
m.Option.class=Option
m.Option.nodeId=Node
m.Option.attOptionId=Option ID
m.Option.attOptionName=Name
m.Option.attDialogId=Dialogue
m.Option.attDialogIdR=Dialogue
m.Option.attOptionUri=URI
m.Option.attOptionUri_dscr=file://  => Insert/Choose audio file. For example: "/opt/si2000/neroot/vxml/vxml/custom/autoattendant/myAudio.pcm". \n\n \http://  => Insert external URI. For example: "http://www.google.com/myAudio.pcm". \n\n \phone:// => Insert/Choose correct phone number. For example: "phone://84951234".
m.Option.optionDtmf=DTMF
m.Option.aatUri=URI
m.Option.predefinedUriPart=Predefined

m.Option.err.attOptionName="Option Name" '{0}' already exist.

# AudioFiles
m.AudioFiles.class=Audio Files
m.AudioFiles.nodeId=Node
m.AudioFiles.attFileId=Audio Files ID
m.AudioFiles.attFileName=Name
m.AudioFiles.aatUri=URL
m.AudioFiles.attFileUri=URL
m.AudioFiles.attFileUriT=Audio File
m.AudioFiles.attFileSize=Size
m.AudioFiles.aatUploadFile=Upload Audio File
m.AudioFiles.aatBrowseFile_dscr=Browse Audio File
m.AudioFiles.aatDeleteFile=Delete Audio File
m.AudioFiles.aatDownloadFile=Download Audio File
m.AudioFiles.fileChooserDialog.title=Select Audio File
m.AudioFiles.dirChooserDialog.title=Select Directory
m.AudioFiles.path=/opt/si2000/neroot/vxml/vxml/custom/autoattendant
#m.AudioFiles.path=D:\\opt\\si2000\\neroot\\vxml\\vxml\\custom\\autoattendant
m.AudioFiles.aatNode=Select Node
# AudioFiles Operations
m.AudioFiles.backup=Backup Audio Files
m.AudioFiles.backup_dscr=Backup Audio Files data from network element to MN client side.
m.AudioFiles.install=Install Audio Files to NE
m.AudioFiles.install_dscr=Transfer and install Audio Files from MN client to network element.
m.AudioFiles.neNODEID=ne
m.AudioFiles.mnAAtTempPath=aattemp
m.AudioFiles.autoattendant=autoattendant
m.AudioFiles.predefinedUrlPart=Predefined
m.AudioFiles.attFileUriMaxLength=120

m.AudioFiles.err.attFileName="Audio Files Name" '{0}' already exist.

m.AudioFiles.msgI.uploadSucced=Audio file '{0}' successfully uploaded.
m.AudioFiles.msgI.overwrittenSucced=Audio file '{0}' successfully overwritten.
m.AudioFiles.msgI.uploadNotSucced=Audio file unsuccessfully uploaded.
m.AudioFiles.msgI.existName=Audio file '{0}' with this name already exists. 
m.AudioFiles.msgI.overwrite=Overwrite
m.AudioFiles.msgI.rename=Rename
m.AudioFiles.msgI.cancel=Cancel
m.AudioFiles.msgI.newName=Please enter another name.
m.AudioFiles.msgI.delete=Do you want to delete '{0}' file?
m.AudioFiles.msgI.successfullyDelete=Successfully deleted '{0}' file.
m.AudioFiles.msgI.canNotDelete=Audio file '{0}' cannot be deleted. It's used by another instance(s).
m.AudioFiles.msgI.canNotDeleteUsedFile=Audio file '{0}' cannot be deleted. File is used by '{1}'.
m.AudioFiles.msgI.successfullyDownload=Audio file '{0}' was successfully downloaded.
m.AudioFiles.msgE.error=Error: 
m.AudioFiles.msgE.syncMustBeOn=Node of selected instance "{0}",\ndoes not have synchronization mode set to 'On'.
m.AudioFiles.msgE.installMnToNeERR=Error occurred while installing Audio File to NE.
m.AudioFiles.msgI.barTitle=Backup Audio Files to NE
m.AudioFiles.msgI.dialogAAtDir=Select Audio Files Backup Directory
m.AudioFiles.msgI.dirNeNodeExists=Some Audio Files subdirectory already exists.\nOverwrite the existing one?
m.AudioFiles.msgE.noAAtDataFromNe=Custom Audio Files data are not installed on NE.
m.AudioFiles.msgE.transferFromNeToServerERR=Error occurred while transferring Audio Files data from NE to MN server.\u0020
m.AudioFiles.msgE.transferFromServerToClientERR=Error occurred while transferring Audio Files data from MN server to MN client.\u0020
m.AudioFiles.msgI.dataTransferedToLocal=Audio Files data successfully transferred to MN client side.
m.AudioFiles.msgE.fileOnServerNotExists=File or directory '{0}' does not exist on MN server side.
m.AudioFiles.msgI.dialogVxmlDir=Select Root Directory for Audio Files
m.AudioFiles.msgE.aatDataNotExist=Selected directory does not contain any data.
m.AudioFiles.msgE.dirNeNodeNotExist=Directory '{0}' is invalid.\nSelected directory must be Audio Files directory (e.g.: 'ne1000') or proper parent date directory (e.g.: '31-dec-2006') or parent root Audio Files directory.
m.AudioFiles.msgI.installAAtToNe=WARNING: Transfer of Audio Files will force all active Audio Files session to release. Alternatively you can manually stop Audio Files functionality, wait for active sessions to complete and start Audio Files transfer afterwards. When transferring completes manual start of Audio Files functionality is needed.\nDo you want to activate Audio Files transfer now?
m.AudioFiles.msgE.sshCommandErr=Error occurred while performing SSH command on NE side.
m.AudioFiles.msgE.aatNeReleaseNotExist=NE release does not exist
m.AudioFiles.msgE.aatDefaultFileNotExist=File '{0}', which contains information of default Audio Files data size, does not exist on NE.\u0020
m.AudioFiles.msgE.aatDefaultFileIsEmpty=File '{0}', which holds information of default Audio Files data size is empty.
m.AudioFiles.msgE.transferVxmlSizeFileFromNeToServerERR=Error occurred while transferring file '{0}' from NE to MN server.\u0020
m.AudioFiles.msgE.readAAtDefaultFileERR=Error occurred while reading file '{0}'.\u0020
m.AudioFiles.msgI.dataTransferedToNe=Audio Files data successfully transferred to NE.
m.AudioFiles.msgE.dirNameNotOk=Value of parameter "{0}" contains invalid directory name.\nDirectory name cannot have interspaces.
m.AudioFiles.msgE.fileNameToLong=Absolute Audio File Path can not be longer then {0} characters.

# AAtBackup
m.AAtBackup.class=Backup Audio Files
m.AAtBackup.local=Local File System (MN Client):
aatBackup.msgE.aatPathNotExist=Audio Files path on MN client file system does not exist.

# Install Audio Files to NE
m.ImportAAtFromLocal.class=Install Audio Files to NE
m.ImportAAtFromLocal.local=Local File System (MN Client):
m.ImportAAtFromLocal.aatSuccessFile=aat_success.txt
m.ImportAAtFromLocal.localPath=Local File System (MN Client)
importAAtFromLocal.msgE.aatPathNotExist=Audio Files path on MN client file system does not exist.


#VxmlPhone
m.VxmlPhone.class=VXML Phone
m.Phone.vxmlSubs=VXML Subscriber
m.VxmlPhone.phoneid=Phone ID
m.VxmlPhone.cdr=CDR Data